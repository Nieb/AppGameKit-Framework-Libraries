///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
TYPE RGBA
    r AS INTEGER
    g AS INTEGER
    b AS INTEGER
    a AS INTEGER
ENDTYPE

TYPE RGBAf
    r AS FLOAT
    g AS FLOAT
    b AS FLOAT
    a AS FLOAT
ENDTYPE


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION RGBA(Red AS INTEGER, Green AS INTEGER, Blue AS INTEGER, Alpha AS INTEGER)
    Result AS RGBA
    Result.r = Red
    Result.g = Green
    Result.b = Blue
    Result.a = Alpha
ENDFUNCTION Result

FUNCTION RGBAf(Red AS FLOAT, Green AS FLOAT, Blue AS FLOAT, Alpha AS FLOAT)
    Result AS RGBAf
    Result.r = Red
    Result.g = Green
    Result.b = Blue
    Result.a = Alpha
ENDFUNCTION Result


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION InitializeColor()
    // AGK does not support default values for UserTypes.
    //====================================================================================================
    GLOBAL CLR_Blk AS RGBA : CLR_Blk = RGBA(  0,   0,   0, 255)
    GLOBAL CLR_Gry AS RGBA : CLR_Gry = RGBA(128, 128, 128, 255)
    GLOBAL CLR_Wht AS RGBA : CLR_Wht = RGBA(255, 255, 255, 255)
    GLOBAL CLR_Red AS RGBA : CLR_Red = RGBA(255,   0,   0, 255)
    GLOBAL CLR_Ylw AS RGBA : CLR_Ylw = RGBA(255, 255,   0, 255)
    GLOBAL CLR_Grn AS RGBA : CLR_Grn = RGBA(  0, 255,   0, 255)
    GLOBAL CLR_Cyn AS RGBA : CLR_Cyn = RGBA(  0, 255, 255, 255)
    GLOBAL CLR_Blu AS RGBA : CLR_Blu = RGBA(  0,   0, 255, 255)
    GLOBAL CLR_Vlt AS RGBA : CLR_Vlt = RGBA(255,   0, 255, 255)
    //====================================================================================================
    GLOBAL CLR_AxisX AS RGBA : CLR_AxisX = RGBA(247,  31,   0, 255) // Red-ish.
    GLOBAL CLR_AxisY AS RGBA : CLR_AxisY = RGBA(103, 255,   0, 255) // Green-ish.
    GLOBAL CLR_AxisZ AS RGBA : CLR_AxisZ = RGBA(  0, 128, 255, 255) // Blue-ish.
    //====================================================================================================
ENDFUNCTION


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION PrintColor(Label AS STRING, PrintMe REF AS RGBA)
    Print(Label + padstr(PrintMe.r, 3, 0) + " " + padstr(PrintMe.g, 3, 0) + " " + padstr(PrintMe.b, 3, 0) + " " + padstr(PrintMe.a, 3, 0))
ENDFUNCTION


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION PrintColorf(Label AS STRING, PrintMe REF AS RGBAf, TruncRight AS INTEGER)
    Print(Label + padstr(PrintMe.r, 1, TruncRight) + " " + padstr(PrintMe.g, 1, TruncRight) + " " + padstr(PrintMe.b, 1, TruncRight) + " " + padstr(PrintMe.a, 1, TruncRight))
ENDFUNCTION


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION RGBAToRGBAf(Color AS RGBA)
    Result AS RGBAf
    Result.r = Color.r * 0.00392156862745098039215686274509803921568627450980
    Result.g = Color.g * 0.00392156862745098039215686274509803921568627450980
    Result.b = Color.b * 0.00392156862745098039215686274509803921568627450980
    Result.a = Color.a * 0.00392156862745098039215686274509803921568627450980
ENDFUNCTION Result


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION RGBAfToRGBA(Color AS RGBAf)
    Result AS RGBA
    Result.r = round(Color.r * 255.0)
    Result.g = round(Color.g * 255.0)
    Result.b = round(Color.b * 255.0)
    Result.a = round(Color.a * 255.0)
ENDFUNCTION Result


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION RGBA_ABGR(TheColor REF AS RGBA)
    ColorIntABGR AS INTEGER : ColorIntABGR = (TheColor.a << 24) + (TheColor.b << 16) + (TheColor.g <<  8) + TheColor.r
ENDFUNCTION ColorIntABGR


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION iABGR(Red AS INTEGER, Green AS INTEGER, Blue AS INTEGER, Alpha AS INTEGER)
    ColorIntABGR AS INTEGER : ColorIntABGR = (Alpha << 24) + (Blue << 16) + (Green <<  8) + Red
ENDFUNCTION ColorIntABGR

