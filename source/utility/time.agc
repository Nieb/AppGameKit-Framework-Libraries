///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
TYPE _Time_
    ThisFrame  AS FLOAT
    LastFrame  AS FLOAT
    Delta      AS FLOAT

    Speed AS FLOAT
ENDTYPE
GLOBAL Time AS _Time_


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION UpdateTime()
  //Time.ThisFrame = Time.ThisFrame + GetFrameTime() * Time.Speed
    Time.ThisFrame = Timer()

    Time.Delta     = Time.ThisFrame - Time.LastFrame

    //  This maintains timer precision to: ~0.000_001 Seconds (1 MicroSecond).  (Assuming 32-bit float timer.)
    IF (Time.ThisFrame >= 60.0) : ResetTimer()
                                  Time.LastFrame = Timer()
    ELSE                        : Time.LastFrame = Time.ThisFrame
    ENDIF
ENDFUNCTION
//
//  Place 'UpdateTime()' at beginning of loop, immediately after Sync() or Swap().
//  Use 'Time.Delta' with any time based events.
//  Example:
//      DO
//          UpdateTime()
//
//          // Velocity will be Units per-second.
//          Thing.Vel = 1.0
//          Thing.Pos = Thing.Pos + (Thing.Vel * Time.Delta)
//
//          Sync()
//      LOOP
//


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION UnixTimeToString(TimeUnix AS INTEGER)
    //  1 Hour                      3600 Seconds
    //  1 Day                      86400 Seconds
    //  1 Week                    604800 Seconds
    //  1 Month (30.44 days)     2629743 Seconds
    //  1 Year (365.24 days)    31556926 Seconds

    ClientTimeZoneOffset AS INTEGER : ClientTimeZoneOffset = val(left(GetCurrentTime(),2)) - GetHoursFromUnix(GetUnixTime())

    TimeUnix = TimeUnix + (3600 * ClientTimeZoneOffset)

    TimeUnixStr AS STRING
    TimeUnixStr =                      str(   GetYearFromUnix(TimeUnix)           )+"-"
    TimeUnixStr = TimeUnixStr + padstrwith(  GetMonthFromUnix(TimeUnix), 2, 0, "0")+"-"
    TimeUnixStr = TimeUnixStr + padstrwith(   GetDaysFromUnix(TimeUnix), 2, 0, "0")+" "
    TimeUnixStr = TimeUnixStr + padstrwith(  GetHoursFromUnix(TimeUnix), 2, 0, "0")+":"
    TimeUnixStr = TimeUnixStr + padstrwith(GetMinutesFromUnix(TimeUnix), 2, 0, "0")+":"
    TimeUnixStr = TimeUnixStr + padstrwith(GetSecondsFromUnix(TimeUnix), 2, 0, "0")
ENDFUNCTION TimeUnixStr

