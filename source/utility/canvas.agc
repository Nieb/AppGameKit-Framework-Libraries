///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
TYPE Canvas
    SizX AS INTEGER
    SizY AS INTEGER

    StpY AS INTEGER //  Memblock byte step size.

    MEM AS INTEGER
    IMG AS INTEGER
    SPR AS INTEGER
ENDTYPE
#Constant MEM_IMG_HEADER_SIZE = 12


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Constructors:
FUNCTION CreateCanvas(PosX AS INTEGER, PosY AS INTEGER,
                      SizX AS INTEGER, SizY AS INTEGER )
    _Cnvs_ AS Canvas
    _Cnvs_.SizX = SizX
    _Cnvs_.SizY = SizY
    _Cnvs_.StpY = SizX*4
    _Cnvs_.MEM = CreateMemblock(MEM_IMG_HEADER_SIZE+(SizX*SizY*4))
        // HEADER
        SetMemblockInt( _Cnvs_.MEM, 0, SizX ) // SizeX.
        SetMemblockInt( _Cnvs_.MEM, 4, SizY ) // SizeY.
        SetMemblockInt( _Cnvs_.MEM, 8,   32 ) // BitDepth.
    _Cnvs_.IMG = CreateImageFromMemblock(_Cnvs_.MEM)
    _Cnvs_.SPR = CreateSprite(_Cnvs_.IMG)
        SetSpritePosition(_Cnvs_.SPR, PosX, PosY)
        SetSpriteSize(_Cnvs_.SPR, SizX, SizY)
ENDFUNCTION _Cnvs_


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION DestroyCanvas(_Cnvs_ REF AS Canvas)
    _Cnvs_.SizX = 0
    _Cnvs_.SizY = 0
    DeleteMemblock(_Cnvs_.MEM) : _Cnvs_.MEM = 0
    DeleteSprite(_Cnvs_.SPR)   : _Cnvs_.SPR = 0
    DeleteImage(_Cnvs_.IMG)    : _Cnvs_.IMG = 0
ENDFUNCTION


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION SetCanvasPixel(_Cnvs_ REF AS Canvas,
                        iX      AS INTEGER, iY AS INTEGER,
                        ClrABGR AS INTEGER)
    SetMemblockInt(_Cnvs_.MEM, MEM_IMG_HEADER_SIZE + (iY*_Cnvs_.StpY) + (iX*4), ClrABGR)
ENDFUNCTION


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION CommitCanvasChanges(_Cnvs_ REF AS Canvas)
    DeleteImage(_Cnvs_.IMG)
    _Cnvs_.IMG = CreateImageFromMemblock(_Cnvs_.MEM)
    SetSpriteImage(_Cnvs_.SPR, _Cnvs_.IMG)
ENDFUNCTION

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION RevertCanvasChanges(_Cnvs_ REF AS Canvas)
    DeleteMemblock(_Cnvs_.MEM)
    _Cnvs_.MEM = CreateMemblockFromImage(_Cnvs_.IMG)
ENDFUNCTION


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FUNCTION SaveCanvas(_Cnvs_ REF AS Canvas, FileName AS STRING)
    SaveImage(_Cnvs_.IMG, FileName)
ENDFUNCTION

